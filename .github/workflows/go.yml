name: Go
on: [pull_request]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.15
      uses: actions/setup-go@v1
      with:
        go-version: 1.15
      id: go

    # - name: Install golangci-lint
    #   run: |
    #     curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sudo sh -s -- -b /usr/local/bin v1.30.0

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    # - name: Install Tools
    #   run: make install-tools

    # - name: Install Dependencies
    #   run: PATH="$(go env GOPATH)/bin":$PATH make vendor-dependencies

    # - name: Lint
    #   run: make lint

    - name: Lint
      uses: golangci/golangci-lint-action@v1
      with:
        version: v1.30

    - name: Test
      run: make test-with-cover

    - name: Build Tempo
      run: make tempo

    - name: Build Tempo-Query
      run: make tempo-query

  push-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build Docker image
        run: make docker-tempo
      - name: Push the Docker image
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          function tag_and_push {
            docker tag tempo:latest "annanay25/tempo:${1}" && docker push "annanay25/tempo:${1}"
          }
          if [[ "${GITHUB_REF}" == "refs/heads/master" ]]; then
            tag_and_push "latest"
          elif [[ "${GITHUB_REF}" =~ refs/tags/v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
              TAG="${GITHUB_REF#"refs/tags/v"}"
              tag_and_push "${TAG}"
              tag_and_push "latest"
          else
            tag_and_push "${GITHUB_REF#"refs/tags/"}"
          fi
